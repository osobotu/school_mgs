// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: roles.sql

package db

import (
	"context"
)

const createRole = `-- name: CreateRole :one
INSERT INTO roles (
    role
) VALUES (
    $1
) RETURNING id, role
`

func (q *Queries) CreateRole(ctx context.Context, role string) (Role, error) {
	row := q.db.QueryRowContext(ctx, createRole, role)
	var i Role
	err := row.Scan(&i.ID, &i.Role)
	return i, err
}

const getRoleByID = `-- name: GetRoleByID :one
SELECT id, role FROM roles
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetRoleByID(ctx context.Context, id int32) (Role, error) {
	row := q.db.QueryRowContext(ctx, getRoleByID, id)
	var i Role
	err := row.Scan(&i.ID, &i.Role)
	return i, err
}
